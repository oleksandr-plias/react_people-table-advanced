{"version":3,"sources":["utils/getNavLinkClass.ts","components/AppNavigation.tsx","App.tsx","pages/HomePage.tsx","components/Loader/Loader.tsx","utils/searchHelper.ts","components/PersonLink.tsx","components/SearchLink.tsx","utils/sortHelpers.ts","components/PeopleList.tsx","components/PeopleFilters.tsx","api.ts","pages/PeoplePage.tsx","pages/NotFoundPage.tsx","Root.tsx","index.tsx"],"names":["getNavLinkClass","isActive","cn","AppNavigation","useSearchParams","searchParams","className","role","to","pathname","search","toString","App","HomePage","Loader","SearchKey","SexType","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","PersonLink","person","sex","name","slug","FEMALE","SearchLink","children","params","props","SortType","getSortParams","sortValue","currentSort","currentOrder","sort","order","PeopleList","people","personSlug","useParams","curSort","get","SORT","curOrder","ORDER","values","map","sortVal","classNames","born","died","mother","motherName","father","fatherName","centuryOptions","PeopleFilters","setSearchParams","query","QUERY","SEX","centuries","getAll","CENTURIES","MALE","type","placeholder","onChange","event","setSearchWith","target","century","isCenturySelected","includes","filter","centum","length","API_URL","wait","delay","Promise","resolve","setTimeout","getPeople","then","fetch","response","json","getParent","personList","parentName","find","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setisError","chosenSex","loadPeople","loadedPeople","useEffect","preparedPeople","useMemo","peopleFilteredSorted","centuryCheck","String","Math","ceil","sexCheck","queryCheck","param","args","arg","some","toLowerCase","checkQuery","first","second","NAME","localeCompare","BORN","DIED","NotFoundPage","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.e91266e9.chunk.js","sourcesContent":["import cn from 'classnames';\n\nexport const getNavLinkClass = (\n  { isActive }: { isActive: boolean },\n) => cn('navbar-item', {\n  'has-background-grey-lighter': isActive,\n});\n","import { NavLink, useSearchParams } from 'react-router-dom';\nimport { getNavLinkClass } from '../utils/getNavLinkClass';\n\nexport const AppNavigation: React.FC = () => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={getNavLinkClass}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n          <NavLink\n            to={{\n              pathname: '/people',\n              search: searchParams.toString(),\n            }}\n            className={getNavLinkClass}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport { AppNavigation } from './components/AppNavigation';\nimport './App.scss';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <AppNavigation />\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","export enum SearchKey {\n  QUERY = 'query',\n  SEX = 'sex',\n  CENTURIES = 'centuries',\n  SORT = 'sort',\n  ORDER = 'order',\n}\n\nexport enum SexType {\n  MALE = 'm',\n  FEMALE = 'f',\n}\n\nexport type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams,\n): string {\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  return newParams.toString();\n}\n","import { Link, useSearchParams } from 'react-router-dom';\nimport React from 'react';\nimport cn from 'classnames';\nimport { Person } from '../types/Person';\nimport { SexType } from '../utils/searchHelper';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({\n  person: { sex, name, slug },\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <td>\n      <Link\n        to={{\n          pathname: `/people/${slug}`,\n          search: searchParams.toString(),\n        }}\n        className={cn({\n          'has-text-danger': sex === SexType.FEMALE,\n        })}\n      >\n        {name}\n      </Link>\n    </td>\n  );\n};\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\n/**\n * To replace the the standard `Link` we take all it props except for `to`\n * along with the custom `params` prop that we use for updating the search\n */\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\n/**\n * SearchLink updates the given `params` in the search keeping the `pathname`\n * and the other existing search params (see `getSearchWith`)\n */\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","import { SearchParams } from './searchHelper';\n\nexport enum SortType {\n  NAME = 'Name',\n  SEX = 'Sex',\n  BORN = 'Born',\n  DIED = 'Died',\n}\n\nconst order = 'desc';\n\nexport function getSortParams(\n  sortValue: SortType,\n  currentSort: string,\n  currentOrder: string,\n): SearchParams {\n  switch (true) {\n    case currentSort !== sortValue && !currentOrder:\n      return { sort: sortValue, order: null };\n    case currentSort !== sortValue && !!currentOrder:\n      return { sort: sortValue, order: null };\n    case currentSort === sortValue && !currentOrder:\n      return { sort: sortValue, order };\n    default:\n      return { sort: null, order: null };\n  }\n}\n\ntype Arg = string | null;\n\nexport const checkQuery = (param: string, ...args: Arg[]) => {\n  if (!param) {\n    return true;\n  }\n\n  const normalArgs = args.filter(arg => arg !== null) as string[];\n\n  return normalArgs.some(value => {\n    return value.toLowerCase().includes(param.toLowerCase());\n  });\n};\n","import { useParams, useSearchParams } from 'react-router-dom';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { Person } from '../types/Person';\nimport { PersonLink } from './PersonLink';\nimport { SearchLink } from './SearchLink';\nimport { SortType, getSortParams } from '../utils/sortHelpers';\nimport { SearchKey } from '../utils/searchHelper';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleList: React.FC<Props> = ({ people }) => {\n  const { personSlug } = useParams();\n  const [searchParams] = useSearchParams();\n  const curSort = searchParams.get(SearchKey.SORT) || '';\n  const curOrder = searchParams.get(SearchKey.ORDER) || '';\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {Object.values(SortType).map((sortVal) => (\n            <th key={sortVal}>\n              <span className=\"is-flex is-flex-wrap-nowrap\">\n                {sortVal}\n                <SearchLink\n                  params={getSortParams(sortVal, curSort, curOrder)}\n                >\n                  <span className=\"icon\">\n                    <i\n                      className={classNames('fas', {\n                        'fa-sort': curSort !== sortVal,\n                        'fa-sort-up': curSort === sortVal && !curOrder,\n                        'fa-sort-down': curSort === sortVal && !!curOrder,\n                      })}\n                    />\n                  </span>\n                </SearchLink>\n              </span>\n            </th>\n          ))}\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const {\n            slug, sex, born, died, mother, motherName, father, fatherName,\n          } = person;\n\n          return (\n            <tr\n              key={slug}\n              data-cy=\"person\"\n              className={classNames({\n                'has-background-warning': personSlug === slug,\n              })}\n            >\n              <PersonLink person={person} />\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              {mother ? (\n                <PersonLink person={mother} />\n              ) : (\n                <td>{motherName || '-'}</td>\n              )}\n              {father ? (\n                <PersonLink person={father} />\n              ) : (\n                <td>{fatherName || '-'}</td>\n              )}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport {\n  SearchKey, SearchParams, SexType, getSearchWith,\n} from '../utils/searchHelper';\nimport { SearchLink } from './SearchLink';\n\nconst centuryOptions = ['16', '17', '18', '19', '20'];\n\nexport const PeopleFilters = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get(SearchKey.QUERY) || '';\n  const sex = searchParams.get(SearchKey.SEX) || '';\n  const centuries = searchParams.getAll(SearchKey.CENTURIES) || [];\n\n  function setSearchWith(params: SearchParams) {\n    const search = getSearchWith(searchParams, params);\n\n    setSearchParams(search);\n  }\n\n  function handleQueryChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setSearchWith({ query: event.target.value || null });\n  }\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <SearchLink\n          params={{ [SearchKey.SEX]: null }}\n          className={classNames({ 'is-active': !sex })}\n        >\n          All\n        </SearchLink>\n        <SearchLink\n          params={{ [SearchKey.SEX]: SexType.MALE }}\n          className={classNames({ 'is-active': sex === SexType.MALE })}\n        >\n          Male\n        </SearchLink>\n        <SearchLink\n          params={{ [SearchKey.SEX]: SexType.FEMALE }}\n          className={classNames({ 'is-active': sex === SexType.FEMALE })}\n        >\n          Female\n        </SearchLink>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query}\n            onChange={handleQueryChange}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {centuryOptions.map(century => {\n              const isCenturySelected = centuries.includes(century);\n\n              return (\n                <SearchLink\n                  key={century}\n                  params={{\n                    centuries: isCenturySelected\n                      ? centuries.filter(centum => centum !== century)\n                      : [...centuries, century],\n                  }}\n                  data-cy=\"century\"\n                  className={classNames('button mr-1', {\n                    'is-info': isCenturySelected,\n                  })}\n                >\n                  {century}\n                </SearchLink>\n              );\n            })}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              params={{ centuries: null }}\n              data-cy=\"centuryALL\"\n              className={classNames('button is-success', {\n                'is-outlined': !!centuries.length,\n              })}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          params={{\n            query: null,\n            sex: null,\n            centuries: null,\n          }}\n          className=\"button is-link is-outlined is-fullwidth\"\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useMemo, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Loader } from '../components/Loader';\nimport { PeopleList } from '../components/PeopleList';\nimport { PeopleFilters } from '../components/PeopleFilters';\nimport { getPeople } from '../api';\nimport { Person } from '../types/Person';\nimport { SortType, checkQuery } from '../utils/sortHelpers';\nimport { SearchKey } from '../utils/searchHelper';\n\nconst getParent = (personList: Person[], parentName: string | null) => {\n  return personList.find(({ name }) => name === parentName);\n};\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setisError] = useState(false);\n\n  const [searchParams] = useSearchParams();\n\n  const query = searchParams.get(SearchKey.QUERY) || '';\n  const chosenSex = searchParams.get(SearchKey.SEX) || '';\n  const centuries = searchParams.getAll(SearchKey.CENTURIES) || [];\n  const sort = searchParams.get(SearchKey.SORT) || '';\n  const order = searchParams.get(SearchKey.ORDER) || '';\n\n  const loadPeople = async () => {\n    setIsLoading(true);\n    try {\n      const loadedPeople = await getPeople();\n\n      setisError(false);\n      setPeople(loadedPeople);\n    } catch {\n      setisError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  const preparedPeople = useMemo(() => {\n    return people.map((person) => ({\n      ...person,\n      mother: getParent(people, person.motherName),\n      father: getParent(people, person.fatherName),\n    }));\n  }, [people]);\n\n  const peopleFilteredSorted = useMemo(() => {\n    return preparedPeople\n      .filter(({\n        name, sex, died, fatherName, motherName,\n      }) => {\n        const centuryCheck = centuries.length\n          ? centuries.includes(String(Math.ceil(died / 100)))\n          : true;\n        const sexCheck = chosenSex\n          ? chosenSex === sex\n          : true;\n        const queryCheck = checkQuery(query, name, fatherName, motherName);\n\n        return queryCheck && sexCheck && centuryCheck;\n      })\n      .sort((first, second) => {\n        switch (sort) {\n          case SortType.NAME:\n            return order\n              ? second.name.localeCompare(first.name)\n              : first.name.localeCompare(second.name);\n          case SortType.SEX:\n            return order\n              ? second.sex.localeCompare(first.sex)\n              : first.sex.localeCompare(second.sex);\n          case SortType.BORN:\n            return order\n              ? +(second.born) - +(first.born)\n              : +(first.born) - +(second.born);\n          case SortType.DIED:\n            return order\n              ? +(second.died) - +(first.died)\n              : +(first.died) - +(second.died);\n          default:\n            return 0;\n        }\n      });\n  }, [preparedPeople, query, chosenSex, centuries, sort]);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          {!isLoading && !isError && preparedPeople.length && (\n            <div className=\"column is-7-tablet is-narrow-desktop\">\n              <PeopleFilters />\n            </div>\n          )}\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoading && <Loader />}\n\n              {isError && !isLoading && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              )}\n\n              {!isLoading && people.length === 0 && !isError && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n\n              {peopleFilteredSorted.length === 0 && !isLoading && !isError && (\n                <p>\n                  There are no people matching the current search criteria\n                </p>\n              )}\n\n              {peopleFilteredSorted.length > 0 && !isLoading && (\n                <PeopleList people={peopleFilteredSorted} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import {\n  HashRouter as Router, Routes, Route, Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n        <Route path=\"people\">\n          <Route index element={<PeoplePage />} />\n          <Route path=\":personSlug\" element={<PeoplePage />} />\n        </Route>\n\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}